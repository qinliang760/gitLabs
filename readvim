1.insert model 各种插入模式
a > 在光标后插入
o > 在当前行后插入行
O > 在当前行前插入行
cw > 替换从光标所在位置后到一个单词结尾的字符
i > 
100 i text ESC 输入100个text

2.delete
dd > 删除当前行 ndd 删除以当前行开始的n行
d3k > 向上删除3行，包括当前
d3j > 向下删除3行，包括当前
dw > 删除一个单词/光标之后的单词剩余部分
d$ > 删除光标之后的部分
x > 删除当前光标所在的一个字符

3.撤销
u 撤销上一次操作
ctrl+r 恢复上一次操作

4.查找
/ 输入查找的字符
n 查找下一个

5.拷贝、粘贴
yy 拷贝当前行
p/P 当前之后粘贴/当前这前
3p 粘贴3次
100i bug [esc]输入出100个bug
.重复上一个命令
3.重复3次上一个命令
N<command> 重复某个命令N次

6.移动
hjkl
0 零 行头
$ 行尾
^ 行头不是空字符的位置
g_ 行尾不是空字符的位置
w 到下一个单词的开头
e 到下个单词的结尾
W
E
f
t
% 匹配括号
*/# 匹配光标当前所在的单词上一个/下一个
7.打开、保存、退出
:e
:saveas
:bn
:bp

8,宏录制
qz -> /**/ -> q 录制宏z -> 输入 -> 退出录制
@z 调用宏
@@ 调用最新录制的宏

9,可视化选择模式 v or V
J 把选择行变成一行
> or < 缩进
= 自动缩进
10,字符自动提示补齐 将之前输入的记录下来
<c-n> or <c-p>
11,:split or :vsplit 分屏上下 or 左右
<c-w> + or - or _ or hjkl 增加尺寸 减少尺寸 最大化尺寸 分屏切换
:only 取消当前分屏
:vs 垂直
:sv 水平

12,块操作
window 下 <c-q>,linux下<c-v>
hjkl选择块
大写I,A插入字符,ESC执行


13,区域选择
visual模式下
<action>a<object> <action>i<object>
action:d or y or v
object:w or s or p
如"foo"
vi"
va"
v2i"

14,diff
1. vimdiff file1 file2
2.vim file1
vertical diffsplit file2

15,替换
:%s/Defaults/defaults/g 查找所有Defaults替换为defaults



vim 配置和插件
/*files乱码*/
set fileencodings=gb2312,gb18030,utf-8
set termencoding=utf-8
set encoding=prc
/*jsbeautify js格式化*/
nnoremap <F4> :call g:Jsbeautify()<cr>

window 下vim说明
vimfiles是用户自己的一个配置folder,而vim73是安装目录
vim73中的plugin和vimfiles中的plugin作用是一样的
建议把安装的插件放在vimfiles，备份起来比较容易
